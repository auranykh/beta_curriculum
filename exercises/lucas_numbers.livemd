<<<<<<< HEAD
# Lucas Numbers

## Lucas Numbers

This exercise was inspired by [Exercism.io](https://exercism.org/tracks/elixir/exercises/lucas-numbers). It's
A fantastic platform for learning many languages including Elixir.

Lucas numbers are much like the fibonacci sequence where $fib(n) = fib(n - 1) + fib(n - 2)$
[Numberphile](https://www.youtube.com/watch?v=PeUbRXnbmms&ab_channel=Numberphile) has a great video that explains them in further detail,

Unlike Fibonacci, they start with a different initial 2 numbers.

Commonly it will start with `2, 1`, so:

```mermaid
flowchart LR
  2 --> 1 --> 3 --> 4 --> 7 --> 11 --> 18 --> 29 --> ...
```

In the Elixir cell below, implement the `LucasNumbers.generate/1` function that will generate
a Lucas number sequence starting with `2, 1`.

```elixir
LucasNumbers.generate(1)
[1]

LucasNumbers.generate(2)
[2, 1]

LucasNumbers.generate(3)
[2, 1, 3]
```

```elixir
defmodule LucasNumbers do
  def generate(n) do
  end
end
```
=======
# Lucas Numbers

## Navigation

[Return Home](../start.livemd)

## Lucas Numbers

This exercise was inspired by [Exercism.io](https://exercism.org/tracks/elixir/exercises/lucas-numbers). It's
A fantastic platform for learning many languages including Elixir.

Lucas numbers are much like the fibonacci sequence where $fib(n) = fib(n - 1) + fib(n - 2)$
[Numberphile](https://www.youtube.com/watch?v=PeUbRXnbmms&ab_channel=Numberphile) has a great video that explains them in further detail,

Unlike Fibonacci, they start with a different initial 2 numbers.

Commonly it will start with `2, 1`, so:

```mermaid
flowchart LR
  2 --> 1 --> 3 --> 4 --> 7 --> 11 --> 18 --> 29 --> ...
```

In the Elixir cell below, implement the `LucasNumbers.generate/1` function that will generate
a Lucas number sequence starting with `2, 1`.

```elixir
LucasNumbers.generate(1)
[1]

LucasNumbers.generate(2)
[2, 1]

LucasNumbers.generate(3)
[2, 1, 3]
```

```elixir
defmodule LucasNumbers do
  def generate(n) do
  end
end
```
>>>>>>> Main
