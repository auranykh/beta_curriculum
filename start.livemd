# Course Outline

## Week 1

### 1. Course Overview

* Reading
  * Command Line
  * Elixir (ASDF)
  * Git
  * Livebook
  * Curriculum Livebook Setup
* Exercises
  * Command Line Family Tree
  * IEx Terminal Math
  * Student Info Form
  * Livebook Recovery Practice

### 2. Basics

* Reading
  * [Comments](reading/comments.livemd)
  * [Arithmetic](reading/arithmetic.livemd)
  * [Strings](reading/strings.livemd)
  * [Booleans](reading/booleans.livemd)
  * [Comparison Operators](reading/comparison_operators.livemd)
  * [Variable Binding](reading/variable_binding.livemd)
* Exercises
  * [Arithmetic](exercises/arithmetic.livemd)
  * [Calculate Loading](exercises/calculate_loading.livemd)
  * [Mad Libs](exercises/mad_libs.livemd)
  * [Boolean Operators](exercises/boolean_operators.livemd)
  * [Guessing Games](exercises/guessing_games.livemd)
  * [Rock Paper Scissors](exercises/rock_paper_scissors.livemd)

### 3. Complex Types

* Reading
  * [Atoms](reading/atoms.livemd)
  * [Tuples](reading/tuples.livemd)
  * [Lists](reading/lists.livemd)
  * [Keyword Lists](reading/keyword_lists.livemd)
  * [Maps](reading/maps.livemd)
  * MapSet
* Exercises
  * [Shopping List](exercises/shopping_list.livemd)
  * [Family Tree](exercises/family_tree.livemd)
  * [Mazes](exercises/mazes.livemd)
  * [Treasure Hunt](exercises/treasure_hunt.livemd)

### 4. Modules, Functions, Structs, Control Flow

* Reading
  * [Functions](reading/functions.livemd)
  * [Modules](reading/modules.livemd)
  * [Structs](reading/structs.livemd)
  * [Control Flow](reading/control_flow.livemd)
  * alias, require, import
* Exercises
  * [Naming Numbers](exercises/naming_numbers.livemd)
  * [RPG Dialogue](exercises/rpg_dialogue.livemd)
  * [Pokemon Battle](exercises/pokemon_battle.livemd)
  * [Custom Rock Paper Scissors](exercises/custom_rock_paper_scissors.livemd)
  * [Rock Paper Scissors Lizard Spock](exercises/rock_paper_scissors_lizard_spock.livemd)

### 5.

## Week 2

### 1. Problem Solving & Enumeration

* Reading
  * [Ranges](reading/ranges.livemd)
  * [Enum](reading/enum.livemd)
  * [Enumerating on Non-Enumerables](reading/non_enumerables.livemd)
  * Problem Solving
* Exercises
  * [FizzBuzz](exercises/fizzbuzz.livemd)
  * [Voter Count](exercises/voter_count.livemd)
  * [Is Anagram?](exercises/anagram.livemd)
  * [Bottles of Soda](exercises/bottles_of_soda.livemd)
  * [Character Generator](exercises/character_generator.livemd)
  * AOC Day 1 Given a string of measurements
    * How many measurements have increased? [1, 2, 1] -> 1
    * What increments have they changed by? [1, -1]

### 2. Comprehensions, Reduce

* Reading
  * Enum Reduce
  * [Comprehensions](reading/comprehensions.livemd)
* Exercises
  * [Item Generator](exercises/item_generator.livemd)
  * Re-Implement Enum filter with reduce.
  * Sum Numbers (from a list, from a map)
  * [Tally Votes](exercises/tally_votes.livemd)
  * Given a set of measurements, what is their total positive change? (200, 250, 200) would be 50
  * Given a set of movement instructions, what is your final position? (0, 0) :up :right (1, 1)
  * Find the average in a list of numbers

### 3. Built-In Modules (Map, Tuple, List, Date & Time)

* Reading
  * [Built-In Modules](reading/built-in_modules.livemd)
  * Map
  * Tuple
  * List
  * Keyword
  * Date & DateTime
* Exercises
  * Perform Common Operations
  * Sublist
  * Determine a winning Bingo Board
  * [Number Wordle](exercises/number_wordle.livemd)
  * [TicTacToe](exercises/tictaktoe.livemd)

### 4. Guards, Pattern Matching

* Reading
  * [Polymorphism](reading/polymorphism.livemd)
  * [Guards](reading/guards.livemd)
  * [Pattern Matching](reading/pattern_matching.livemd)
* Exercises
  * Which of the following match?
  * [Trasure Matching](exercises/treasure_matching.livemd)
  * [Rock Paper Scissors Pattern Matching](exercises/rps_pattern_matching.livemd)
  * No Conditional Fizz Buzz
  * Kitchen Calculator (Converting Measurements)
  * Currency Conversion

### 5. String Manipulation (Regex, Charlist vs Strings)

* Reading
  * Regex
  * Charlists
* Exercises
  * Email Validation
  * Phone Number Parsing
  * Word Count
  * Classified (Find and Replace classified words in text)
  * Caesar Cypher
  * rollable expressions (find d20 expressions and replace them)
  * https://regexone.com/

## Week 3

### 1. Polymorphism, Protocols & Behaviors

* Reading
  * [Protocols](reading/protocols.livemd)
  * [Behaviours](reading/behaviours.livemd)
* Exercises
  * [RPG](exercises/rpg_abilities.livemd)
  * [Pokemon Evolution](exercises/pokemon_protocols.livemd)
  * [Math](exercises/math.livemd)
  * [Battle Map](exercises/battle_map.livemd)

### 2. Performance (Immutability, Streams, Lists Vs Tuples Vs Maps Vs Mapsets, Big O, Benchee, :Timer) &

* Reading
  * [Performance](reading/performance.livemd) (NEEDS UPDATE)
  * [Streams](reading/streams.livemd)
  * [Lists and Tuples](reading/lists_vs_tuples.livemd) (NEEDS UPDATE)
  * Maps & MapSets
  * Benchmarking with Benchee and :timer
  * Big O
  * [Recursion](reading/recursion.livemd)
  * [Divide And Conquer](reading/divide_and_conquer.livemd)
* Exercises
  * Benchmark Common Operations Maps, Lists, Tuples, MapSet
  * Benchmark Previous Exercises (FizzBuzz, NonConditional FizzBuzz, Bottles Of Soda)
  * Re-implement Enum Module
  * Recursively Expand List
  * Count Votes, Split Votes
  * Sublist using Recursion
  * [Cards](exercises/cards.livemd)
  * [Pascals Triangle](exercises/pascals_triangle.livemd)
  * [Fibonacci](exercises/fibonacci.livemd)
  * [Lucas Numbers](exercises/lucas_numbers.livemd)
  * [Factorial](exercises/factorial.livemd)
  * [Anagram Solver](exercises/anagram_solver.livemd)

### 3.

### 4. Files and Data Validation

* Reading
  * [File](reading/file.livemd)
  * Binary
  * Scripts
  * [Ecto Changesets](reading/ecto_changesets.livemd)
* Exercises
  * Determine the File Type (provided a png, jpg)
  * Sign Up Form
  * Dog Show (need certain breeds, trims, etc. Use errors to rank score)
  * File Todo List
  * iex script to count image types in a directory.
  * iex script to determine how many files of each extension type exist in a dir

### 5. Processes

* Reading
  * [Processes](reading/processes.livemd)
  * [Generic Server](reading/generic_server.livemd)
  * Agents
  * [ETS](reading/ets.livemd)
* Exercises
  * Agent Key Value Store
  * [File System Todo App](exercises/file_system_todo_app.livemd)
  * [Key Value Store](exercises/key_value_store.livemd)
  * [ETS Spell Book](exercises/ets_spell_book.livemd)
  * [Traffic Light Server](exercises/traffic_light_server)
  * [Rock Paper Scissors Genserver](exercises/rock_paper_scissors_server.livemd)
  * [Pokemon Server](exercises/pokemon_server.livemd)

## Week 4

### 1. Mix Tooling

* Reading
  * Local Development Setup
  * Mix
  * Config
  * Deps
  * Credo
  * Dialyzer
  * ExUnit
  * Documentation and Doc Testing
* Exercises
  * Tested Fibonacci
  * File Based Journal CLI (auto create daily note, create note with blueprint)
  * Math Module w/ TypeSpecs
  * Wordle CLI

### 2. Supervisor Basics and Fault Tolerance (+Task)

* Reading
  * Supervisors
  * Fault Tolerance
* Exercises
  * Mining Simulator
  * Bomb Defusal
  * Math Game

### 3. BEAM, Nodes and Distributed Elixir

* Reading
  * BEAM Scheduler
  * Nodes
* Exercises
  * [Distributed Rock Paper Scissors](exercises/distributed_rock_paper_scissors.livemd)
  * Distributed Chat App
    *

### 4. Ecto & Database Basics

* Reading
  * CRUD
  * Databases
  * Ecto Basics
* Exercises
  * Persisted Todo List
  * Database Journal CLI (Journals, Notes, Tags, Insert, Update, Delete)

### 5.

## Week 5

### 1. APIs & Parsing JSON

* Reading
  * APIs
  * JSON & Jason
  * HTTP & HTTPPoison
* Exercises
  * Pokemon CLI
  * Weather CLI
  * Github Issue Tracker

### 2. Web Servers

* Reading
  * Servers
  * Networking
  * Plug
* Exercises
  * Build an Elixir HTTP Server from scratch
  * Build a Caching HTTP Proxy

### 3. Macros and `use`

* Reading
  * Macros
  * `use`
* Exercises
  * Rewrite ExUnit
  * Use unquote() to Enumerate multiple tests.
  * Create a custom unless function
  * FlexibleMath: Override + to handle other data types.

### 4. Deploying Mix Project

* Publish a Math hex package
* Publish the HTTP Server

### 5.

## Week 6

### 1. Phoenix Framework & Generators

* Reading
  * Phoenix Framework Installation & Setup
  * Phoenix Framework Project Overview
  * Phoenix Generators
  * Testing Phoenix Projects
* Exercises
  * Build a Personal Website
  * Pokemon Search Site

### 2. HTML & CSS (+ Flex, Grid)

* Reading
  * HTML
  * CSS
  * Layout with Flex and Grid
* Exercises
  * Recreate Component Examples
  * https://www.w3schools.com/css/exercise.asp?filename=exercise_selectors1
  * https://www.w3schools.com/html/exercise.asp?filename=exercise_html_attributes1
  * https://flexboxfroggy.com/
  * Piet Mondrian Box Art https://learnodo-newtonic.com/wp-content/uploads/2016/09/Composition-with-Large-Red-Plane-Yellow-Black-Gray-and-Blue-1921-Piet-Mondrian.jpg
  * Style Personal Website

### 3. Ecto & RDBMS & SQL & Seeding Data

* Reading
  * Phoenix Ecto Generators
  * RDBMS
  * SQL
  * Seeding Data
* Exercises
  * Build a Blog
  * https://www.w3schools.com/sql/exercise.asp?filename=exercise_select1
  * Todo List CRUD app
  * Music Artist Search (with seed data from .json) (Artist, Album, Song)

### 4. Tailwind

* Reading
  * Tailwind
* Exercises
  * Configure Tailwind with the Blog
  * Recreate Card Component
  * Create Responsive Navigation Bar
  * Configure Tailwind with Music Artist Search. Add styles from Mock.

### 5. UX/UI Design + Accessibility

* Reading
  * UI/UX
  * Pen * Paper Prototyping
  * Figma & Mocks
  * Accessibility
* Exercises
  * Use Axe to Improve Blog Accessibility. Add Tab Navigation.
  * Use ColorZilla and Compare Color Combinations with https://toolness.github.io/accessible-color-matrix/
  * Start Planning Your Final Project in Figma.

## Week 7

### 1. Phoenix Authentication & Permissions

* Reading
  * Phoenix Authentication Generators
  * Security
  * Permissions
* Exercises
  * Lesson: Add Users to Blog Site
  * Add Users to Music Artist Search
  * Add Personal Playlists to Music Artist Search
  * Add Shared Playlists to Music Artist Search

### 2. LiveView (+ Testing Patterns)

* Reading
  * LiveView
* Exercises
  * Blog Post Search
  * Blog Post Pagination Button
  * Responsive Music Artist Search
  * Validated Create Artist Form

### 1. JavaScript & JS Interoptability & AlpineJS

* Reading
  * JavaScript
  * JS Interoptability
  * AlpineJS
* Exercises
  * Blog Post Search Pagination & Infinite Scroll
  * Alpine JS Counter
  * Add Phone Number Validation to Blog Site
  * Music Scroll Pagination & Infinite Scroll
  * Alpine JS Current Date Display

### 2. PubSub & Channels

* Reading
  * PubSub
  * Channels
* Exercises
  * Live Update Blog List
  * Live Comments On Blog Post
  * Live Multiplayer Rock Paper Scissors
  * Create a Chat App
  * Create Chat Rooms in the Chat App

### 3. GraphQL & Absinthe (+ Testing Patterns)

* Reading
  * GraphQL
  * Absinthe
* Exercises
  * Recipe App
  * Music Search App w/ GraphQL

## Week 8

### 1. TDD Techniques (Red Green Refactor)

* Reading
  * TDD & Refactoring
  * Code Clarity
  * Mix Testing Tools
* Exercises

### 2. Metrics, Telemetry, Live Dashboard

* Reading
  * Telemetry
  * Live Dashboard
* Exercises

### 3. Factories & Mocks

* Reading
  * Factories with ExMachina
  * Mocks with Mox
* Exercises
  * Blog App Factory
  * Music App Factory
  * Twilio SMS App

### 4. Property Based Testing (Stream Data) + E2E Testing (Wallaby)

* Reading
  * Property Based Testing With Stream Data
  * End-To-End Testing With Wallaby
* Exercises
  * Test Music Filters
  * E2E Test Rock Paper Scissors App

### 5. CI/CD, Code Coverage, Github Actions & Hooks

* Reading
  * CI/CD
  * Github Actions * Hooks
  * Code Coverage
* Exercises
  * Rock Paper Scissors Pre-Commit Credo hook
  * Rock Paper Scissors Pre-Push Test hook
  * Rock Paper Scissors Code Coverage
  * Rock Paper Scissors CI/CD Setup

## Week 9 (Group Project)

### 1. Software & Product Management (Agile, StandUps)

### 2. Architecture Design & Patterns (Diagrams, UML, CQRS/ES, Contexts, MVC)

### 3. Advanced Livebook (Graphs, Tables, Connecting Projects)

### 4. Open Source Patterns & Advanced Github (PRs, Forking, Cloning, Issues)

### 5.

## Week 10

### 1. Emailing & Swoosh

* Reading
  * Swoosh
* Exercises
  * Contact Form On the Blog Site.

### 2. Stripe

* Reading

  * Stripe

* Exercises

  * Donate Button On the Blog Site.
  * Purchase Songs on Music App

### 3. Oban

* Reading
  * Oban
* Exercises
  * Schedule Blog Post Publish
  * Schedule Email Reminder

### 4. RabbitMQ

* Reading
  * Message Queues
  * RabbitMQ
* Exercises

### 5. Mnesia

* Reading
  * Mnesia
* Exercises
  * Build a Link Shortener

## Week 11

### 1. Umbrella Projects

### 2. Supervision Trees, Worker Pools, Tasks

### 3. Nodes, Clustering

### 4. Deployment w/ Kubernetes & Distillery

### 5.

## Week 12 (Final Project)

### 1.

### 2.

### 3.

### 4.

### 5.
